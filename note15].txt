1---
git tag straightforward not super dificult

2---
very useful
tags are pointer that refer to particular points in git history
we can mark a particular moment in time with a tag
tags are most often used to mark version releases in projects (v.4.1)
think of tags as braanch reference that do not change  once a tag is created it always refers to ✅the same commit its just a label for a commit
i can tag diff  between this tag  with other tags
two diffrent tags  discuss
lighweight tags   they are just a name/label that point to a particular commit 
annotated tags store extra meta data including the author name  mail the date and a tagging message (like a commit message)
annotated tags  in big project preferred
3--
semantic versioning spec outline a ✅standardized versioning system for sofrware releases it provide a consistent way for developer
 to give meaning to their software releases(how big of a change is this realese)
version consist of three number aseparated by periods  2.4.1

✔major release . ✔minor relase  .✔ patch release    initial softwaare  1.0.0  severty of changes
 ✅patch releases normally do not contain new deature or significant changes they typically signify bug fixes 
and other changes that do not impact how the code is used  1.00.1
✅minor releases signify that new feature or functinality have been added but the project is still backward compatible
no breaking changes the new functinality is optional and should not force users to rewrite their own code 1.1.0
✅major releases signify significant changes that is no longer backward compatible    
feature may be remode or changed substantially
4---
▶git tag  ✅✅no argument no option  no additional value  
 will print a list of all the tags in the current repository
highlight some point in history and have that be a static reference that does not update unless we explicity want to movied
type git tag  if  git   countinue  :   ✅type  q  till get out 
▶git tag -l "*beta"   [l = list ]    example   ▶git tag -l "v17"    filter  v17.0.1 v17.1.1 and  17.X.X  * every after (rgex)

5---
view the state of a repo at a particular tag we acan use ▶git checkout <tag>  this put us in detached HEAD
like checkout head~3    same thing
or  ▶git diff tag..tag    can  compare two tag         it just sticky note on aa comment 

6---
✅✅make tag
git tag <tagname>

7--
annotated tag
▶git tag -a <tagname>  put name  then enter  come up  texteditor   and  write long meta data 
how  see annotated tag  ?  ▶git show v17.0.01    then show us message an time authour and ...  use -m    message tag 
8---
▶ git tag  <tagname> <commit hash>      go to history put a tag  one commit

9----
move  tag     mean pick up tag from  commit  then put it  on  selected commit
▶git tag tagname(used)  hashcode (selected commit)   -f    [f=force]

10-----
▶git tag -d tagname     delete tagname

11---
▶git push origin --tag  all tag push     and ▶git push origin nametag  send this tag
by default the git pudg command doesnt transfer tags to remote server if you have a lot of a tags that you want to push up at once you can
use --tags option to the git push command this will transfer all of your tag s to the remote aserver that are not already there
if  git push   not send   tag  to github 
